{{/*
Copyright National Payments Corporation of India. All Rights Reserved.
SPDX-License-Identifier:  GPL-3.0
*/}}

{{- $BankName          := .Values.nameOverride }}
{{- $HlfDomain         := .Values.global.hlf_domain }}
{{- $IcaEndPoint       := .Values.global.ica_endpoint }}
{{- $TlsCaEndpoint     := .Values.global.tlsca_endpoint }}
{{- $IcaTlsCertFile    := .Values.ica_tls_certfile | default "/tmp/ca-cert.pem" }}
{{- $TlsCaTlsCertFile  := .Values.tlsca_tls_certfile | default "/tmp/tlsca-cert.pem" }}
{{- $OverrideMspId     := .Values.MspIdOverride }}

{{- range .Values.peers }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .name }}-{{ include "fabric-peer.name" $ }}
  labels:
    {{- include "fabric-peer.labels" $ | nindent 4 }}
    {{- if .additionalLabels -}}
    {{ toYaml .additionalLabels | nindent 4 }}
    {{- end }}
spec:
  serviceName: {{ .name }}-{{ include "fabric-peer.name" $ }}
  replicas: {{ $.Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "fabric-peer.selectorLabels" $ | nindent 6 }}
      app: {{ .name }}-{{ include "fabric-peer.name" $ }}
      {{- if .additionalLabels -}}
      {{ toYaml .additionalLabels | nindent 6 }}
      {{- end }}
  template:
    metadata:
      {{- with $.Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fabric-peer.selectorLabels" $ | nindent 8 }}
        app: {{ .name }}-{{ include "fabric-peer.name" $ }}
        {{- if .additionalLabels -}}
        {{ toYaml .additionalLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .name }}-{{ include "fabric-peer.name" $ }}
      securityContext:
        {{- toYaml $.Values.global.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init
          image: {{ $.Values.init.image.repository }}:{{ $.Values.init.image.tag }}
          imagePullPolicy: {{ $.Values.global.imagePullPolicy  | default "Always" }}
          command: ["/bin/sh","-c"]
          args:
           - /scripts/enroll.sh {{ $IcaEndPoint }} {{ $TlsCaEndpoint }} {{ .identity_name }} {{ .identity_secret }} {{ $IcaTlsCertFile }} {{ $TlsCaTlsCertFile }}
          volumeMounts:
           - name: cert-peer
             mountPath: {{ $.Values.fabric_base_dir }}
           - name: config
             mountPath: /scripts/enroll.sh
             subPath: enroll.sh
           - name: common
             mountPath: /scripts/functions.sh
             subPath: functions.sh
      containers:
        {{- if .useCouchDB | default $.Values.global.useCouchDB }}
        - name: couchdb
          image: {{ .couchImageRegistry | default $.Values.global.couchImageRegistry }}/{{ .couchImageRepo | default $.Values.global.couchImageRepo }}:{{ .couchImageTag | default $.Values.global.couchImageTag }}
          imagePullPolicy: {{ $.Values.global.imagePullPolicy  | default "Always" }}
          env:
            - name: COUCHDB_USER
              value: {{ .couchDbUser | default $.Values.global.couchDbUser | quote  }}
            - name: COUCHDB_PASSWORD
              value: {{ .couchDbUserPass | default $.Values.global.couchDbUserPass | quote }}
            {{- if $.Values.additionalEnvironmentVars.couchDb }}
            {{- tpl (toYaml $.Values.additionalEnvironmentVars.couchDb) $ | nindent 12 }}
            {{- end }}
            {{- if ((.additionalEnvironmentVars).couchDb) }}
            {{- tpl (toYaml .additionalEnvironmentVars.couchDb) $ | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml $.Values.global.couchSecurityContext | nindent 12 }}
          startupProbe:
          {{- if .couchStartupProbe }}
             {{- toYaml .couchStartupProbe | nindent 12 }}
          {{- else if not (.disableDefaultCouchStartupProbe | default $.Values.global.disableDefaultCouchStartupProbe) }}
             {{- toYaml $.Values.couchStartupProbe | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .couchLivenessProbe }}
             {{- toYaml .couchLivenessProbe | nindent 12 }}
          {{- else if not (.disableDefaultCouchLivenessProbe | default $.Values.global.disableDefaultCouchLivenessProbe) }}
             {{- toYaml $.Values.couchLivenessProbe | nindent 12 }}
          {{- end }} 
          readinessProbe:
          {{- if .couchReadinessProbe }}
             {{- toYaml .couchReadinessProbe | nindent 12 }}
          {{- else if not (.disableDefaultCouchReadinessProbe | default $.Values.global.disableDefaultCouchReadinessProbe) }}
             {{- toYaml $.Values.couchReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
             {{- toYaml (.couchResources | default $.Values.global.couchResources) | nindent 12 }}
          ports:
            - containerPort: {{ .couchContainerPort | default $.Values.global.couchContainerPort }}
          volumeMounts:
            - name: {{ (.couchUseExistingPvcPrefix | default $.Values.global.couchUseExistingPvcPrefix) | default "data-couchdb" }}
              mountPath: {{ .couchDataDir | default $.Values.global.couchDataDir }}
        {{- end }}
        - name: dind-daemon
          image: {{ .dindImageRegistry | default $.Values.global.dindImageRegistry }}/{{ .dindImageRepo | default $.Values.global.dindImageRepo }}:{{ .dindImageTag | default $.Values.global.dindImageTag }}
          imagePullPolicy: {{ $.Values.global.imagePullPolicy  | default "Always" }}
          env:
            - name: DOCKER_TLS_CERTDIR
              value: {{ .dindDocker_tls_certdir | default $.Values.global.dindDocker_tls_certdir | quote }}
            {{- if $.Values.additionalEnvironmentVars.dind }}
            {{- tpl (toYaml $.Values.additionalEnvironmentVars.dind) $ | nindent 12 }}
            {{- end }}
            {{- if ((.additionalEnvironmentVars).dind) }}
            {{- tpl (toYaml .additionalEnvironmentVars.dind) $ | nindent 12 }}
            {{- end }}
          startupProbe:
          {{- if .dindStartupProbe }}
             {{- toYaml .dindStartupProbe | nindent 12 }}
          {{- else if not (.disableDefaultDindStartupProbe | default $.Values.global.disableDefaultDindStartupProbe) }}
             {{- toYaml $.Values.dindStartupProbe | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .dindLivenessProbe }}
             {{- toYaml .dindLivenessProbe | nindent 12 }}
          {{- else if not (.disableDefaultDindLivenessProbe | default $.Values.global.disableDefaultDindLivenessProbe) }}
             {{- toYaml $.Values.dindLivenessProbe | nindent 12 }}
          {{- end }} 
          readinessProbe:
          {{- if .dindReadinessProbe }}
             {{- toYaml .dindReadinessProbe | nindent 12 }}
          {{- else if not (.disableDefaultDindReadinessProbe | default $.Values.global.disableDefaultDindReadinessProbe) }}
             {{- toYaml $.Values.dindReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml (.dindResources | default $.Values.global.dindResources) | nindent 12 }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh","-c","sleep 20; sh /docker-preload/load_images.sh"]
          securityContext:
              {{- toYaml $.Values.global.dindSecurityContext | nindent 12 }}
          volumeMounts:
            - name: {{ (.dindUseExistingPvcPrefix | default $.Values.global.dindUseExistingPvcPrefix) | default "data-dind" }}
              mountPath: {{ .dindDataDir | default $.Values.global.dindDataDir }}
        - name: peer
          securityContext:
            {{- toYaml $.Values.global.peerSecurityContext | nindent 12 }}
          image: {{ .peerImageRegistry | default $.Values.global.peerImageRegistry }}/{{ .peerImageRepo | default $.Values.global.peerImageRepo }}:{{ .peerImageTag | default $.Values.global.peerImageTag }}
          imagePullPolicy: {{ $.Values.global.imagePullPolicy  | default "Always" }}
          args:
            - peer
            - node
            - start
          ports:
            - containerPort: {{ .peerContainerPort | default $.Values.global.peerContainerPort }}
          {{- $peerServicePort := .peerServicePort | default $.Values.global.peerServicePort }}
          {{- $IngressPort     := $.Values.global.ingressPort }}
          env:
            - name: CORE_PEER_ADDRESS
              value: {{ .identity_name }}:{{ $peerServicePort }}
            - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
              value: {{ .identity_name }}.{{ $HlfDomain }}:{{ $IngressPort }}
            - name: CORE_PEER_GOSSIP_BOOTSTRAP
              value: {{ .core_peer_gossip_bootstrap | default $.Values.global.core_peer_gossip_bootstrap }}
            - name: CORE_PEER_ID
              value: {{ .identity_name }}
            - name: CORE_PEER_TLS_KEY_FILE
              value: "{{ $.Values.fabric_base_dir }}/tls/server.key"
            - name: CORE_PEER_TLS_ROOTCERT_FILE
              value: "{{ $.Values.fabric_base_dir }}/tls/ca.crt"
            - name: CORE_PEER_TLS_CERT_FILE
              value: "{{ $.Values.fabric_base_dir }}/tls/server.crt"
            - name: CORE_PEER_LOCALMSPID
              value: "{{ $OverrideMspId | default $.Values.nameOverride }}"
            {{- if .useCouchDB | default $.Values.global.useCouchDB }}
            - name: CORE_LEDGER_STATE_STATEDATABASE
              value: "CouchDB"
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
              value: {{ .couchDbUser | default $.Values.global.couchDbUser | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
              value: {{ .couchDbUserPass | default $.Values.global.couchDbUserPass | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_REQUESTTIMEOUT
              value: {{ .core_ledger_state_couchdbconfig_requesttimeout | default $.Values.global.core_ledger_state_couchdbconfig_requesttimeout | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIES
              value: {{ .core_ledger_state_couchdbconfig_maxretries | default $.Values.global.core_ledger_state_couchdbconfig_maxretries | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_MAXUPDATEBATCHSIZE
              value: {{ .core_ledger_state_couchdbconfig_maxupdatebatchsize | default $.Values.global.core_ledger_state_couchdbconfig_maxupdatebatchsize | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_INTERNALQUERYLIMIT
              value: {{ .core_ledger_state_couchdbconfig_internalquerylimit | default $.Values.global.core_ledger_state_couchdbconfig_internalquerylimit | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_TOTALQUERYLIMIT
              value: {{ .core_ledger_state_couchdbconfig_totalquerylimit | default $.Values.global.core_ledger_state_couchdbconfig_totalquerylimit | quote }}
            - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
              value: {{ .core_ledger_state_couchdbconfig_couchdbaddress | default $.Values.global.core_ledger_state_couchdbconfig_couchdbaddress | quote }}
            {{- end }}
            - name: CORE_OPERATIONS_LISTENADDRESS
              value: 0.0.0.0:9443
            - name: CORE_METRICS_PROVIDER
            {{- if eq "prometheus" $.Values.global.metrics.provider }}
              value: "prometheus"
            {{- else if eq "statsd" $.Values.global.metrics.provider }}
              value: "statsd"
            - name: CORE_METRICS_STATSD_NETWORK
              value: {{ $.Values.global.metrics.statsd.network }}
            - name: CORE_METRICS_STATSD_ADDRESS
              value: {{ $.Values.global.metrics.statsd.address }}
            - name: CORE_METRICS_STATSD_WRITEINTERVAL
              value: {{ $.Values.global.metrics.statsd.writeInterval }}
            - name: CORE_METRICS_STATSD_PREFIX
              value: {{ .identity_name }}
            {{- else }}
              value: "disabled"
            {{- end }}
            {{- if $.Values.additionalEnvironmentVars.peer }}
            {{- tpl (toYaml $.Values.additionalEnvironmentVars.peer) $ | nindent 12 }}
            {{- end }}
            {{- if ((.additionalEnvironmentVars).peer) }}
            {{- tpl (toYaml .additionalEnvironmentVars.peer) $ | nindent 12 }}
            {{- end }}
          startupProbe:
          {{- if .peerStartupProbe }}
             {{- toYaml .peerStartupProbe | nindent 12 }}
          {{- else if not (.disableDefaultPeerStartupProbe | default $.Values.global.disableDefaultPeerStartupProbe) }}
             {{- toYaml $.Values.peerStartupProbe | nindent 12 }}
          {{- end }}
          livenessProbe:
          {{- if .peerLivenessProbe }}
             {{- toYaml .peerLivenessProbe | nindent 12 }}
          {{- else if not (.disableDefaultPeerLivenessProbe | default $.Values.global.disableDefaultPeerLivenessProbe) }}
             {{- toYaml $.Values.peerLivenessProbe | nindent 12 }}
          {{- end }} 
          readinessProbe:
          {{- if .peerReadinessProbe }}
             {{- toYaml .peerReadinessProbe | nindent 12 }}
          {{- else if not (.disableDefaultPeerReadinessProbe | default $.Values.global.disableDefaultPeerReadinessProbe) }}
             {{- toYaml $.Values.peerReadinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml (.peerResources | default $.Values.global.peerResources) | nindent 12 }}
          volumeMounts:
            - name: {{ (.peerUseExistingPvcPrefix | default $.Values.global.peerUseExistingPvcPrefix) | default "data-peer" }}
              mountPath: {{ .peerDataDir | default $.Values.global.peerDataDir }}
            - name: cert-peer
              mountPath: {{ $.Values.fabric_base_dir }}/msp
              subPath: msp
            - name: cert-peer
              mountPath: {{ $.Values.fabric_base_dir }}/tls
              subPath: tls
            - name: common
              mountPath: {{ $.Values.fabric_base_dir }}/msp/config.yaml
              subPath: config.yaml
      volumes:
        - name: common
          configMap:
            name: {{ include "fabric-peer.fullname" $ }}-common
            defaultMode: 0777
        - name: config
          configMap:
            name: {{ .name }}-{{ include "fabric-peer.fullname" $ }}-conf
            defaultMode: 0777
        {{- if not .require_certs_dir_persistence }}
        - name: cert-peer
          emptyDir:
           sizeLimit: {{ $.Values.global.peerCertDiskSize }}
        {{- end }}
      nodeSelector:
      {{- if .nodeSelector }} 
        {{- toYaml .nodeSelector | nindent 8 }}
      {{- else if not (.disableGlobalNodeSelector) }}
        {{- toYaml $.Values.global.nodeSelector | nindent 8 }}
      {{- end }}
      affinity:
      {{- if .affinity }} 
        {{- toYaml .affinity | nindent 8 }}
      {{- else if not (.disableGlobalAffinity) }}
        {{- toYaml $.Values.global.affinity | nindent 8 }}
      {{- end }}
      tolerations:
      {{- if .tolerations }} 
        {{- toYaml .tolerations | nindent 8 }}
      {{- else if not (.disableGlobalTolerations) }}
        {{- toYaml $.Values.global.tolerations | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if .useCouchDB | default $.Values.global.useCouchDB }}
  - metadata:
      name: {{ (.couchUseExistingPvcPrefix | default $.Values.global.couchUseExistingPvcPrefix) | default "data-couchdb" }}
    spec:
      accessModes:
      - {{ .couchPvcAccessMode | default $.Values.global.couchPvcAccessMode }}
      resources:
        requests:
          storage: {{ .couchDiskSize | default $.Values.global.couchDiskSize }}
      storageClassName: {{ .couchStorageClass | default $.Values.global.storageClass }} 
  {{- end }}
  - metadata:
      name: {{ (.dindUseExistingPvcPrefix | default $.Values.global.dindUseExistingPvcPrefix) | default "data-dind" }}
    spec:
      accessModes:
      - {{ .dindPvcAccessMode | default $.Values.global.dindPvcAccessMode }}
      resources:
        requests:
          storage: {{ .dindDiskSize | default $.Values.global.dindDiskSize }}
      storageClassName: {{ .dindStorageClass | default $.Values.global.storageClass }}
  - metadata:
      name: {{ (.peerUseExistingPvcPrefix | default $.Values.global.peerUseExistingPvcPrefix) | default "data-peer" }}
    spec:
      accessModes:
      - {{ .peerPvcAccessMode | default $.Values.global.peerPvcAccessMode }}
      resources:
        requests:
          storage: {{ .peerDiskSize | default $.Values.global.peerDiskSize }}
      storageClassName: {{ .peerStorageClass | default $.Values.global.storageClass }}
{{- if (.require_certs_dir_persistence | default $.Values.global.require_certs_dir_persistence) }}
  - metadata:
      name: cert-peer
    spec:
      accessModes:
      - {{ .peerPvcAccessMode | default $.Values.global.peerPvcAccessMode }}
      resources:
        requests:
          storage: {{ .peerCertDiskSize | default $.Values.global.peerCertDiskSize }}
      storageClassName: {{ .peerStorageClass | default $.Values.global.storageClass }}
{{- end }}
{{- end }}