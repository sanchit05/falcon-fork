# Copyright National Payments Corporation of India. All Rights Reserved.
# SPDX-License-Identifier:  GPL-3.0

# Default values for ca.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
additionalLabels: {}
replicaCount: 1
restartPolicy: Always
image:
  repository: hyperledger/fabric-ca
  pullPolicy: IfNotPresent
  ### Overrides the image tag whose default is the chart appVersion.
  tag: "1.5.0"

retry_seconds: 60
recreate_intermediate_cert: false

## tls_domain : This will be used to create an Ingress, and CSR for the CA server.
## Eg: my-hlf-domain.com, then the Ingress object will be created as a combination of ".fabric-ca.fullname + .Values.tls_domain"
## ie, root-ca.my-hlf-domain.com
tls_domain: my-hlf-domain.com
ca_server:
  csr_names_c: IN
  csr_names_st: Maharashtra
  csr_names_l: Mumbai
  csr_names_o: Your Company Name
  csr_names_ou: Your Organization Unit
  container_port: 7051
  debug: true
  tls_enabled: true
  ## You must create this secret outside of this chart for maximum security. Never commit CA user/pass into any charts.
  ## kubectl -n <namespace> create secret generic ca-secret --from-literal=admin=<your-ca-user> --from-literal=password=<your-ca-user-password>
  admin_secret: rca-secret
  additional_sans: []

ica:
  ## When true, this will be deployed as an ICA. 
  enabled: false
  ## Required when ica.enabled: true. 
  ## Eg: root-ca.my-hlf-domain.com:30448. You must specify the port and without http or https. By default all CA servers will be deployed with TLS. This chart will suffix "https" to this given end point when performing any actions.
  ## parent_ca_endpoint: root-ca.my-hlf-domain.com:30448
  ## Required when ica.enabled: true. Uncomment, when you want to use it.
  # intermediate_tls_cert_dir: /tmp/hyperledger/fabric-ca/root-ca-cert
  # intermediate_tls_cert_file: cert.pem

service:
  type: ClusterIP
  port: 7051

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  path: /
  pathType: Prefix

storage:
  pvc_enabled: true
  accessMode: ReadWriteOnce
  storageClass: standard
  size: 1G
  path: /tmp/hyperledger/fabric-ca/crypto

serviceAccount:
  create: true
  annotations: {}
  name: ""

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

startupProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS
  initialDelaySeconds: 10
livenessProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS
readinessProbe:
  httpGet:
    path: /cainfo
    port: http
    scheme: HTTPS

podAnnotations: {}
podSecurityContext: {}
securityContext: {}
affinity: {}
nodeSelector: {}
tolerations: []