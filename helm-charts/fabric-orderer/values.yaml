# Copyright National Payments Corporation of India. All Rights Reserved.
# SPDX-License-Identifier:  GPL-3.0
# Default values for orderer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""
orderer_cert_base_dir: "/var/hyperledger/orderer"
orderer_data_dir: "/var/hyperledger/production"
filestore_ssl: false
ica_tls_cert_file: /root/ica-cert.pem
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
resources: {}
startupProbe:
  tcpSocket:
    port: 7050
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
readinessProbe:
  tcpSocket:
    port: 7050
  periodSeconds: 10
  failureThreshold: 3
livenessProbe:
  tcpSocket:
    port: 7050
  periodSeconds: 10
  failureThreshold: 3

## Example complete list of orderer deployment values.
# orderers:
#   - name: orderer0
#     identity_name: orderer0-orderer
#     identity_secret: orderer0ordererSamplePassword
#   - name: orderer1
#     identity_name: orderer1-orderer
#     identity_secret: orderer1ordererSamplePassword
#   - name: orderer2
#     identity_name: orderer2-orderer
#     identity_secret: orderer2ordererSamplePassword

# csr_names_cn: IN
# csr_names_st: Maharashtra
# csr_names_l: Mumbai
# csr_names_o: Your Company Name

# filestore_endpoint: http://filestore.falcon.white-label.npci.org.in:31862
# filestore_ssl: false # Make it `true` if `filestore_endpoint` is over https.
# ica_tls_cert_file: /root/ica-cert.pem
# retry_seconds: 60
# hlf_domain: falcon.white-label.npci.org.in

# init:
#   image:
#    repository: npcioss/hlf-builder
#    tag: 2.4

# global:
#   containerPort: 7050
#   servicePort: 7050
#   replicaCount: 1
#   ica_endpoint: ica-orderer.falcon.white-label.npci.org.in:30448
#   tlsca_endpoint: tls-ca.falcon.white-label.npci.org.in:30448
#   block_file: genesis.block
#   require_certs_dir_persistence: true
#   image:
#     repository: hyperledger/fabric-orderer
#     pullPolicy: IfNotPresent
#     imagePullSecrets: []
#     tag: "2.4"
#   serviceAccount:
#     annotations: []
#   ingressEnabled: true
#   ingress:
#     className: "nginx"
#     annotations:
#       nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#   storageAccessMode: ReadWriteOnce
#   dataStorageSize: "10Gi"
#   certStorageSize: "50M"
#   storageClass: standard
#   ## Configuration for the Operations Service: https://hyperledger-fabric.readthedocs.io/en/latest/operations_service.html
#   operations:
#     serviceName: operations
#     serviceType: ClusterIP
#     servicePort: 8443
#   metrics:
#     ## Select metrics provider. Possible values are "prometheus", "statsd" or "disabled"
#     provider: disabled

#     ## Only applicable if provider is "prometheus"
#     ## A serviceMonitor will be created for each Orderer with the configuration provided below
#     serviceMonitor:
#       enabled: false
#       additionalLabels: {}
#       namespace: ""

#       ## This should be equal to the operations port name
#       portName: operations
#       scrapeInterval: 30s
#       honorLabels: true
#       relabelings: []
#       metricRelabelings: []

#       ## Default: scrape .Release.Namespace only
#       ## To scrape all, use the following:
#       ## namespaceSelector:
#       ##   any: true
#       namespaceSelector:
#         any: true
#       targetLabels: []
    
#     ## Configuration for statsd provider
#     ## Statsd prefix will be the orderer identity name
#     statsd:
#       network: udp
#       address: 127.0.0.1:8125
#       writeInterval: 10s
#   env:
#     - name: FABRIC_LOGGING_SPEC
#       value: INFO
#     - name: ORDERER_GENERAL_GENESISMETHOD
#       value: file
#     - name: ORDERER_GENERAL_LISTENADDRESS
#       value: 0.0.0.0
#     - name: ORDERER_GENERAL_TLS_ENABLED
#       value: "true"
#     - name: ORDERER_GENERAL_LOCALMSPDIR
#       value: "{{ .Values.orderer_cert_base_dir }}/msp"
#     - name: ORDERER_GENERAL_TLS_CERTIFICATE
#       value: "{{ .Values.orderer_cert_base_dir }}/tls/server.crt"
#     - name: ORDERER_GENERAL_TLS_PRIVATEKEY
#       value: "{{ .Values.orderer_cert_base_dir }}/tls/server.key"
#     - name: ORDERER_GENERAL_TLS_ROOTCAS
#       value: "[{{ .Values.orderer_cert_base_dir }}/tls/ca.crt]"
#     - name: ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE
#       value: "{{ .Values.orderer_cert_base_dir }}/tls/server.crt"
#     - name: ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY
#       value: "{{ .Values.orderer_cert_base_dir }}/tls/server.key"
#     - name: ORDERER_GENERAL_CLUSTER_ROOTCAS
#       value: "[{{ .Values.orderer_cert_base_dir }}/tls/ca.crt]"
#   resources: {}
#   nodeSelector: {}
#   tolerations: []
#   affinity: {}

# startupProbe: {}
# livenessProbe: {}
# readinessProbe: {}
# podAnnotations: {}
# podSecurityContext: {}
# securityContext: {}